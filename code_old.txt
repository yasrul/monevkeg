SELECT i.Kd_Prog, (SUM(r.fisik) / COUNT(i.Kd_Prog)) AS rerata_fisik, (SUM(r.keuangan) / COUNT(i.Kd_Prog)) rerata_uang FROM indikator i
LEFT JOIN (SELECT id_indikator, MAX(fisik) AS fisik, MAX(keuangan) AS keuangan FROM realisasi GROUP BY id_indikator) r ON i.id = r.id_indikator
GROUP BY i.Kd_Prog
ORDER BY i.Kd_Prog

public static function listProgram() {
        $Options = Program::find()->select(['concat(Kd_Prog,".",ID_Prog) KdID_Prog','Ket_Program'])
                ->groupBy(['Kd_Prog','ID_Prog'])->asArray()->all();
        return ArrayHelper::map($Options, 'KdID_Prog', 'Ket_Program');
}

$realProgs = (new Query())->select('p.Ket_Program AS Program, SUM(r.fisik)/COUNT(i.Kd_Prog) AS rerata_fisik, SUM(r.keuangan)/COUNT(i.Kd_Prog) rerata_uang')
                ->from('indikator i')
                ->leftJoin('(SELECT id_indikator, MAX(fisik) AS fisik, MAX(keuangan) AS keuangan FROM realisasi GROUP BY id_indikator) r ON i.id = r.id_indikator')
                ->leftJoin('program p ON (i.Kd_Prog = p.Kd_Prog) AND (i.ID_Prog = p.ID_Prog)')
                ->groupBy('i.Kd_Prog, i.ID_Prog')->orderBy('i.Kd_Prog, i.ID_Prog')
                ->all();

public function actionCreate($idIndikator)
    {
        $model = new Monev();
        $model->id_indikator = $idIndikator;

        if ($model->load(Yii::$app->request->post())) {
            $filesup = UploadedFile::getInstances($model, 'filesup');
            if ($filesup) {
                foreach ($filesup as $fileup) {
                    
                    $model->doc_realfilename .= $fileup->name.'//';
                    $sysfilename = $fileup->baseName.Yii::$app->security->generateRandomString(4).'.'.$fileup->extension;
                    $model->doc_sysfilename .= $sysfilename.'//';
                    $fileup->saveAs(Yii::getAlias('@app/docfiles/').$sysfilename);
                }
            }
            if ($model->save()) {
                return $this->redirect(['realisasi-keg/view', 'id' => $model->id_indikator]);
            }
            
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

SELECT concat(i.Kd_Urusan,'.',i.Kd_Bidang,'.',i.Kd_Unit,'.',i.Kd_Sub,'.',i.Kd_Prog,'.',i.Kd_Keg) as 'Kode Prog/Keg', p.Ket_Program, k.Ket_Kegiatan, i.Tolak_Ukur, concat(cast(format(i.Target_Angka,0) as CHARACTER),' ',i.Target_Uraian) as 'Target', r.keuangan, r.fisik, m.kinerja, m.permasalahan, m.resume, m.rekomendasi 
FROM indikator i 
LEFT JOIN program p ON i.Kd_Prog = p.Kd_Prog AND i.ID_Prog = p.ID_Prog 
LEFT JOIN kegiatan k ON i.Kd_Prog = k.Kd_Prog AND i.ID_Prog = k.Id_Prog AND i.Kd_Keg = k.Kd_Keg 
LEFT JOIN (SELECT id_indikator, MAX(fisik) AS fisik, MAX(keuangan) AS keuangan FROM realisasi GROUP BY id_indikator) r ON i.id = r.id_indikator
LEFT JOIN monev m ON i.id = m.id_indikator
